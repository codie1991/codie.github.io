{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/seo.js","webpack:///./src/components/layout/theme/index.js","webpack:///./src/components/layout/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout__WEBPACK_IMPORTED_MODULE_1__","_components_layout_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","theme","lightGrey","colorGreyDark","colorGreyLight","colorBrand","fontBody","fontFancy","maxWidth","breakpointMedium","breakpointMediumMin","breakpointSmall","breakpointSmallMin","padding","LayoutStyles","styled","div","withConfig","displayName","componentId","props","Layout","children","react_default","styled_components_browser_esm","Helmet_default","rel","href"],"mappings":"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","file":"component---src-pages-404-js-c2a44260d175f0252f7a.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/layout/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","export default {\n  lightGrey: \"grey\",\n  colorGreyDark: \"#333\",\n  colorGreyLight: \"#8e9297\",\n  colorBrand: \"#EA5252\",\n  fontBody: \"neue-haas-unica, sans-serif\",\n  fontFancy: \"p22-mackinac-pro,serif\",\n  maxWidth: \"960px\",\n  breakpointMedium: \"1100px\",\n  breakpointMediumMin: \"1101px\", // just means we don't need to calcs to use the breakpoint in min-width queries\n  breakpointSmall: \"800px\",\n  breakpointSmallMin: \"801px\",\n  padding: \"40px\",\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled, { ThemeProvider } from \"styled-components\"\nimport Helmet from \"react-helmet\"\n\nimport theme from \"./theme\"\nimport \"./layout.css\"\n\nconst LayoutStyles = styled.div`\n  font-family: ${props => props.theme.fontBody};\n  font-size: 16px;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: bold;\n    font-family: ${props => props.theme.fontFancy};\n  }\n\n  h1 {\n    font-size: 60px;\n  }\n\n  h2 {\n    font-size: 48px;\n    margin-bottom: 40px;\n    line-height: 2.5rem;\n  }\n\n  h2.subtitle {\n    font-family: ${props => props.theme.fontBody};\n    font-weight: lighter;\n    font-size: 36px;\n    color: ${props => props.theme.colorGreyLight};\n  }\n\n  h3 {\n    font-weight: normal;\n    font-size: 36px;\n  }\n\n  h4 {\n    font-family: ${props => props.theme.fontBody};\n    font-weight: normal;\n    font-size: 21px;\n    color: ${props => props.theme.colorGreyLight};\n    margin-bottom: 5px;\n  }\n\n  h5 {\n    font-size: 21px;\n    color: ${props => props.theme.colorGreyLight};\n  }\n\n  .u-uppercase {\n    text-transform: uppercase;\n  }\n\n  a {\n    text-decoration: none;\n    border-bottom: ${props => props.theme.colorBrand} solid 4px;\n    color: ${props => props.theme.colorGreyDark};\n  }\n\n  a:visited {\n    color: ${props => props.theme.colorGreyDark};\n  }\n\n  p {\n    max-width: 720px;\n  }\n\n  .container {\n    max-width: ${props => props.theme.maxWidth};\n    padding:  0 ${props => props.theme.padding} ${props => props.theme.padding};\n    margin: 0 auto;\n\n    @media screen and (max-width: ${props =>\n        props.theme.breakpointMedium}) and (min-width: ${props =>\n        props.theme.breakpointSmallMin}) {\n      padding: 0 calc(2 * ${props => props.theme.padding});\n    }\n  }\n\n  .section {\n    margin-bottom: 130px;\n  }\n\n  .section--last {\n    margin-bottom: 30vh;\n  }\n\n  .underlined {\n    display: block;\n    border-bottom: solid 4px ${props => props.theme.colorBrand};\n  }\n\n  .content {\n    width: 100%;\n    max-width: 600px;\n    margin-bottom: 20px;\n  }\n\n  .title {\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-gap: 0.5rem;\n    justify-content: start;\n\n    .subtitle {\n      color: ${props => props.theme.colorGreyLight};\n      font-family: ${props => props.theme.fontBody};\n      font-weight: normal;\n    }\n  }\n`\n\nconst Layout = ({ children }) => {\n  // const data = useStaticQuery(graphql`\n  //   query SiteTitleQuery {\n  //     site {\n  //       siteMetadata {\n  //         title\n  //       }\n  //     }\n  //   }\n  // `)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <LayoutStyles>\n        <Helmet>\n          <link rel=\"stylesheet\" href=\"https://use.typekit.net/ftv1pwn.css\" />\n        </Helmet>\n        <div>\n          <main>{children}</main>\n        </div>\n      </LayoutStyles>\n    </ThemeProvider>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}